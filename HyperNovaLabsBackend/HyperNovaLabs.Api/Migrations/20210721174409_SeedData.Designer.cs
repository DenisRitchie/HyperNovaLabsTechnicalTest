// <auto-generated />
using System;
using HyperNovaLabs.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HyperNovaLabs.Api.Migrations
{
    [DbContext(typeof(ExpenseReportContext))]
    [Migration("20210721174409_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HyperNovaLabs.Api.Models.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Concept")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIdentification")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIdentification");

                    b.ToTable("Bill");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApprovedBy = "Raúl Campesino",
                            Concept = "Pago Mensual",
                            DateFrom = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeIdentification = "12-00440-0"
                        });
                });

            modelBuilder.Entity("HyperNovaLabs.Api.Models.BillDescription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("BillDescription");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BillId = 1L,
                            Date = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pago Proyecto de Micro-Servicios con C++ Grpc",
                            Price = 3500.0,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2L,
                            BillId = 1L,
                            Date = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pago Proyecto WebAssembly con C++ Emscripten",
                            Price = 5000.0,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3L,
                            BillId = 1L,
                            Date = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pago por Proyecto Backend en Asp .Net 5 y Grpc",
                            Price = 4000.0,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("HyperNovaLabs.Api.Models.Employee", b =>
                {
                    b.Property<string>("Identification")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Identification");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Identification = "12-00440-0",
                            Department = "Desarrollo",
                            Name = "Denis West",
                            Position = "Desarrollador C++",
                            Supervisor = "N/A"
                        },
                        new
                        {
                            Identification = "12-00441-0",
                            Department = "Ventas",
                            Name = "Darwin Seaz",
                            Position = "Ejecutivo de Ventas",
                            Supervisor = "Denis West"
                        });
                });

            modelBuilder.Entity("HyperNovaLabs.Api.Models.Bill", b =>
                {
                    b.HasOne("HyperNovaLabs.Api.Models.Employee", "Employee")
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeIdentification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HyperNovaLabs.Api.Models.BillDescription", b =>
                {
                    b.HasOne("HyperNovaLabs.Api.Models.Bill", "Bill")
                        .WithMany("BillDescriptions")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("HyperNovaLabs.Api.Models.Bill", b =>
                {
                    b.Navigation("BillDescriptions");
                });

            modelBuilder.Entity("HyperNovaLabs.Api.Models.Employee", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
