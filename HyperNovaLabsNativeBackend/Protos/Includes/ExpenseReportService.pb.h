// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExpenseReportService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ExpenseReportService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ExpenseReportService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include "Models/Bill.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ExpenseReportService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ExpenseReportService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ExpenseReportService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_ExpenseReportService_2eproto_metadata_getter(int index);
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Services {
class CreateBillResponse;
struct CreateBillResponseDefaultTypeInternal;
extern CreateBillResponseDefaultTypeInternal _CreateBillResponse_default_instance_;
class CreateBillResquest;
struct CreateBillResquestDefaultTypeInternal;
extern CreateBillResquestDefaultTypeInternal _CreateBillResquest_default_instance_;
class GetBillRequest;
struct GetBillRequestDefaultTypeInternal;
extern GetBillRequestDefaultTypeInternal _GetBillRequest_default_instance_;
class ListBillResponse;
struct ListBillResponseDefaultTypeInternal;
extern ListBillResponseDefaultTypeInternal _ListBillResponse_default_instance_;
}  // namespace Services
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs
PROTOBUF_NAMESPACE_OPEN
template<> ::HyperNovaLabs::Api::Protos::Services::CreateBillResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::CreateBillResponse>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::CreateBillResquest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::CreateBillResquest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::GetBillRequest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::GetBillRequest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::ListBillResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::ListBillResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Services {

// ===================================================================

class ListBillResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.ListBillResponse) */ {
 public:
  inline ListBillResponse() : ListBillResponse(nullptr) {}
  virtual ~ListBillResponse();
  explicit constexpr ListBillResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListBillResponse(const ListBillResponse& from);
  ListBillResponse(ListBillResponse&& from) noexcept
    : ListBillResponse() {
    *this = ::std::move(from);
  }

  inline ListBillResponse& operator=(const ListBillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListBillResponse& operator=(ListBillResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListBillResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListBillResponse* internal_default_instance() {
    return reinterpret_cast<const ListBillResponse*>(
               &_ListBillResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ListBillResponse& a, ListBillResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListBillResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListBillResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListBillResponse* New() const final {
    return CreateMaybeMessage<ListBillResponse>(nullptr);
  }

  ListBillResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListBillResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListBillResponse& from);
  void MergeFrom(const ListBillResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBillResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.ListBillResponse";
  }
  protected:
  explicit ListBillResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ExpenseReportService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBillsFieldNumber = 1,
  };
  // repeated .HyperNovaLabs.Api.Protos.Models.Bill bills = 1;
  int bills_size() const;
  private:
  int _internal_bills_size() const;
  public:
  void clear_bills();
  ::HyperNovaLabs::Api::Protos::Models::Bill* mutable_bills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >*
      mutable_bills();
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Bill& _internal_bills(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* _internal_add_bills();
  public:
  const ::HyperNovaLabs::Api::Protos::Models::Bill& bills(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* add_bills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >&
      bills() const;

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.ListBillResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill > bills_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ExpenseReportService_2eproto;
};
// -------------------------------------------------------------------

class GetBillRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.GetBillRequest) */ {
 public:
  inline GetBillRequest() : GetBillRequest(nullptr) {}
  virtual ~GetBillRequest();
  explicit constexpr GetBillRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetBillRequest(const GetBillRequest& from);
  GetBillRequest(GetBillRequest&& from) noexcept
    : GetBillRequest() {
    *this = ::std::move(from);
  }

  inline GetBillRequest& operator=(const GetBillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBillRequest& operator=(GetBillRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetBillRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBillRequest* internal_default_instance() {
    return reinterpret_cast<const GetBillRequest*>(
               &_GetBillRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetBillRequest& a, GetBillRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBillRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBillRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetBillRequest* New() const final {
    return CreateMaybeMessage<GetBillRequest>(nullptr);
  }

  GetBillRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetBillRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetBillRequest& from);
  void MergeFrom(const GetBillRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBillRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.GetBillRequest";
  }
  protected:
  explicit GetBillRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ExpenseReportService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBillIdFieldNumber = 1,
  };
  // int64 bill_id = 1;
  void clear_bill_id();
  ::PROTOBUF_NAMESPACE_ID::int64 bill_id() const;
  void set_bill_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bill_id() const;
  void _internal_set_bill_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.GetBillRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bill_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ExpenseReportService_2eproto;
};
// -------------------------------------------------------------------

class CreateBillResquest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.CreateBillResquest) */ {
 public:
  inline CreateBillResquest() : CreateBillResquest(nullptr) {}
  virtual ~CreateBillResquest();
  explicit constexpr CreateBillResquest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateBillResquest(const CreateBillResquest& from);
  CreateBillResquest(CreateBillResquest&& from) noexcept
    : CreateBillResquest() {
    *this = ::std::move(from);
  }

  inline CreateBillResquest& operator=(const CreateBillResquest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBillResquest& operator=(CreateBillResquest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateBillResquest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBillResquest* internal_default_instance() {
    return reinterpret_cast<const CreateBillResquest*>(
               &_CreateBillResquest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CreateBillResquest& a, CreateBillResquest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateBillResquest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBillResquest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateBillResquest* New() const final {
    return CreateMaybeMessage<CreateBillResquest>(nullptr);
  }

  CreateBillResquest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateBillResquest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateBillResquest& from);
  void MergeFrom(const CreateBillResquest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateBillResquest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.CreateBillResquest";
  }
  protected:
  explicit CreateBillResquest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ExpenseReportService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBillFieldNumber = 1,
  };
  // .HyperNovaLabs.Api.Protos.Models.Bill bill = 1;
  bool has_bill() const;
  private:
  bool _internal_has_bill() const;
  public:
  void clear_bill();
  const ::HyperNovaLabs::Api::Protos::Models::Bill& bill() const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* release_bill();
  ::HyperNovaLabs::Api::Protos::Models::Bill* mutable_bill();
  void set_allocated_bill(::HyperNovaLabs::Api::Protos::Models::Bill* bill);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Bill& _internal_bill() const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* _internal_mutable_bill();
  public:
  void unsafe_arena_set_allocated_bill(
      ::HyperNovaLabs::Api::Protos::Models::Bill* bill);
  ::HyperNovaLabs::Api::Protos::Models::Bill* unsafe_arena_release_bill();

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.CreateBillResquest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::HyperNovaLabs::Api::Protos::Models::Bill* bill_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ExpenseReportService_2eproto;
};
// -------------------------------------------------------------------

class CreateBillResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.CreateBillResponse) */ {
 public:
  inline CreateBillResponse() : CreateBillResponse(nullptr) {}
  virtual ~CreateBillResponse();
  explicit constexpr CreateBillResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateBillResponse(const CreateBillResponse& from);
  CreateBillResponse(CreateBillResponse&& from) noexcept
    : CreateBillResponse() {
    *this = ::std::move(from);
  }

  inline CreateBillResponse& operator=(const CreateBillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBillResponse& operator=(CreateBillResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateBillResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBillResponse* internal_default_instance() {
    return reinterpret_cast<const CreateBillResponse*>(
               &_CreateBillResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CreateBillResponse& a, CreateBillResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateBillResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBillResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateBillResponse* New() const final {
    return CreateMaybeMessage<CreateBillResponse>(nullptr);
  }

  CreateBillResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateBillResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateBillResponse& from);
  void MergeFrom(const CreateBillResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateBillResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.CreateBillResponse";
  }
  protected:
  explicit CreateBillResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ExpenseReportService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorsFieldNumber = 3,
    kBillFieldNumber = 1,
    kHasErrorFieldNumber = 2,
  };
  // repeated string errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  const std::string& errors(int index) const;
  std::string* mutable_errors(int index);
  void set_errors(int index, const std::string& value);
  void set_errors(int index, std::string&& value);
  void set_errors(int index, const char* value);
  void set_errors(int index, const char* value, size_t size);
  std::string* add_errors();
  void add_errors(const std::string& value);
  void add_errors(std::string&& value);
  void add_errors(const char* value);
  void add_errors(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& errors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_errors();
  private:
  const std::string& _internal_errors(int index) const;
  std::string* _internal_add_errors();
  public:

  // .HyperNovaLabs.Api.Protos.Models.Bill bill = 1;
  bool has_bill() const;
  private:
  bool _internal_has_bill() const;
  public:
  void clear_bill();
  const ::HyperNovaLabs::Api::Protos::Models::Bill& bill() const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* release_bill();
  ::HyperNovaLabs::Api::Protos::Models::Bill* mutable_bill();
  void set_allocated_bill(::HyperNovaLabs::Api::Protos::Models::Bill* bill);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Bill& _internal_bill() const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* _internal_mutable_bill();
  public:
  void unsafe_arena_set_allocated_bill(
      ::HyperNovaLabs::Api::Protos::Models::Bill* bill);
  ::HyperNovaLabs::Api::Protos::Models::Bill* unsafe_arena_release_bill();

  // bool has_error = 2;
  void clear_has_error();
  bool has_error() const;
  void set_has_error(bool value);
  private:
  bool _internal_has_error() const;
  void _internal_set_has_error(bool value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.CreateBillResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> errors_;
  ::HyperNovaLabs::Api::Protos::Models::Bill* bill_;
  bool has_error_;
  friend struct ::TableStruct_ExpenseReportService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListBillResponse

// repeated .HyperNovaLabs.Api.Protos.Models.Bill bills = 1;
inline int ListBillResponse::_internal_bills_size() const {
  return bills_.size();
}
inline int ListBillResponse::bills_size() const {
  return _internal_bills_size();
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* ListBillResponse::mutable_bills(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.ListBillResponse.bills)
  return bills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >*
ListBillResponse::mutable_bills() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.ListBillResponse.bills)
  return &bills_;
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& ListBillResponse::_internal_bills(int index) const {
  return bills_.Get(index);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& ListBillResponse::bills(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListBillResponse.bills)
  return _internal_bills(index);
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* ListBillResponse::_internal_add_bills() {
  return bills_.Add();
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* ListBillResponse::add_bills() {
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.ListBillResponse.bills)
  return _internal_add_bills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >&
ListBillResponse::bills() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.ListBillResponse.bills)
  return bills_;
}

// -------------------------------------------------------------------

// GetBillRequest

// int64 bill_id = 1;
inline void GetBillRequest::clear_bill_id() {
  bill_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GetBillRequest::_internal_bill_id() const {
  return bill_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GetBillRequest::bill_id() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.GetBillRequest.bill_id)
  return _internal_bill_id();
}
inline void GetBillRequest::_internal_set_bill_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bill_id_ = value;
}
inline void GetBillRequest::set_bill_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bill_id(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.GetBillRequest.bill_id)
}

// -------------------------------------------------------------------

// CreateBillResquest

// .HyperNovaLabs.Api.Protos.Models.Bill bill = 1;
inline bool CreateBillResquest::_internal_has_bill() const {
  return this != internal_default_instance() && bill_ != nullptr;
}
inline bool CreateBillResquest::has_bill() const {
  return _internal_has_bill();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& CreateBillResquest::_internal_bill() const {
  const ::HyperNovaLabs::Api::Protos::Models::Bill* p = bill_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Bill&>(
      ::HyperNovaLabs::Api::Protos::Models::_Bill_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& CreateBillResquest::bill() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateBillResquest.bill)
  return _internal_bill();
}
inline void CreateBillResquest::unsafe_arena_set_allocated_bill(
    ::HyperNovaLabs::Api::Protos::Models::Bill* bill) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bill_);
  }
  bill_ = bill;
  if (bill) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateBillResquest.bill)
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResquest::release_bill() {
  
  ::HyperNovaLabs::Api::Protos::Models::Bill* temp = bill_;
  bill_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResquest::unsafe_arena_release_bill() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.CreateBillResquest.bill)
  
  ::HyperNovaLabs::Api::Protos::Models::Bill* temp = bill_;
  bill_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResquest::_internal_mutable_bill() {
  
  if (bill_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Bill>(GetArena());
    bill_ = p;
  }
  return bill_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResquest::mutable_bill() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.CreateBillResquest.bill)
  return _internal_mutable_bill();
}
inline void CreateBillResquest::set_allocated_bill(::HyperNovaLabs::Api::Protos::Models::Bill* bill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bill_);
  }
  if (bill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bill)->GetArena();
    if (message_arena != submessage_arena) {
      bill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bill, submessage_arena);
    }
    
  } else {
    
  }
  bill_ = bill;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateBillResquest.bill)
}

// -------------------------------------------------------------------

// CreateBillResponse

// .HyperNovaLabs.Api.Protos.Models.Bill bill = 1;
inline bool CreateBillResponse::_internal_has_bill() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || bill_ != nullptr);
  return value;
}
inline bool CreateBillResponse::has_bill() const {
  return _internal_has_bill();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& CreateBillResponse::_internal_bill() const {
  const ::HyperNovaLabs::Api::Protos::Models::Bill* p = bill_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Bill&>(
      ::HyperNovaLabs::Api::Protos::Models::_Bill_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& CreateBillResponse::bill() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.bill)
  return _internal_bill();
}
inline void CreateBillResponse::unsafe_arena_set_allocated_bill(
    ::HyperNovaLabs::Api::Protos::Models::Bill* bill) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bill_);
  }
  bill_ = bill;
  if (bill) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.bill)
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResponse::release_bill() {
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Bill* temp = bill_;
  bill_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResponse::unsafe_arena_release_bill() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.bill)
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Bill* temp = bill_;
  bill_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResponse::_internal_mutable_bill() {
  _has_bits_[0] |= 0x00000001u;
  if (bill_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Bill>(GetArena());
    bill_ = p;
  }
  return bill_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* CreateBillResponse::mutable_bill() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.bill)
  return _internal_mutable_bill();
}
inline void CreateBillResponse::set_allocated_bill(::HyperNovaLabs::Api::Protos::Models::Bill* bill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bill_);
  }
  if (bill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bill)->GetArena();
    if (message_arena != submessage_arena) {
      bill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bill, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  bill_ = bill;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.bill)
}

// bool has_error = 2;
inline void CreateBillResponse::clear_has_error() {
  has_error_ = false;
}
inline bool CreateBillResponse::_internal_has_error() const {
  return has_error_;
}
inline bool CreateBillResponse::has_error() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.has_error)
  return _internal_has_error();
}
inline void CreateBillResponse::_internal_set_has_error(bool value) {
  
  has_error_ = value;
}
inline void CreateBillResponse::set_has_error(bool value) {
  _internal_set_has_error(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.has_error)
}

// repeated string errors = 3;
inline int CreateBillResponse::_internal_errors_size() const {
  return errors_.size();
}
inline int CreateBillResponse::errors_size() const {
  return _internal_errors_size();
}
inline void CreateBillResponse::clear_errors() {
  errors_.Clear();
}
inline std::string* CreateBillResponse::add_errors() {
  // @@protoc_insertion_point(field_add_mutable:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  return _internal_add_errors();
}
inline const std::string& CreateBillResponse::_internal_errors(int index) const {
  return errors_.Get(index);
}
inline const std::string& CreateBillResponse::errors(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  return _internal_errors(index);
}
inline std::string* CreateBillResponse::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  return errors_.Mutable(index);
}
inline void CreateBillResponse::set_errors(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  errors_.Mutable(index)->assign(value);
}
inline void CreateBillResponse::set_errors(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  errors_.Mutable(index)->assign(std::move(value));
}
inline void CreateBillResponse::set_errors(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
}
inline void CreateBillResponse::set_errors(int index, const char* value, size_t size) {
  errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
}
inline std::string* CreateBillResponse::_internal_add_errors() {
  return errors_.Add();
}
inline void CreateBillResponse::add_errors(const std::string& value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
}
inline void CreateBillResponse::add_errors(std::string&& value) {
  errors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
}
inline void CreateBillResponse::add_errors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
}
inline void CreateBillResponse::add_errors(const char* value, size_t size) {
  errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CreateBillResponse::errors() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CreateBillResponse::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.CreateBillResponse.errors)
  return &errors_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Services
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ExpenseReportService_2eproto
