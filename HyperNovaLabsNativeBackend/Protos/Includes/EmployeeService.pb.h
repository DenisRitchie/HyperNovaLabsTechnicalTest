// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EmployeeService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_EmployeeService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_EmployeeService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include "Models/Employee.pb.h"
#include "Models/Bill.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_EmployeeService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_EmployeeService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_EmployeeService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_EmployeeService_2eproto_metadata_getter(int index);
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Services {
class CreateEmployeeRequest;
struct CreateEmployeeRequestDefaultTypeInternal;
extern CreateEmployeeRequestDefaultTypeInternal _CreateEmployeeRequest_default_instance_;
class CreateEmployeeResponse;
struct CreateEmployeeResponseDefaultTypeInternal;
extern CreateEmployeeResponseDefaultTypeInternal _CreateEmployeeResponse_default_instance_;
class DeleteEmployeeRequest;
struct DeleteEmployeeRequestDefaultTypeInternal;
extern DeleteEmployeeRequestDefaultTypeInternal _DeleteEmployeeRequest_default_instance_;
class DeleteEmployeeResponse;
struct DeleteEmployeeResponseDefaultTypeInternal;
extern DeleteEmployeeResponseDefaultTypeInternal _DeleteEmployeeResponse_default_instance_;
class GetEmployeeRequest;
struct GetEmployeeRequestDefaultTypeInternal;
extern GetEmployeeRequestDefaultTypeInternal _GetEmployeeRequest_default_instance_;
class ListEmployeeResponse;
struct ListEmployeeResponseDefaultTypeInternal;
extern ListEmployeeResponseDefaultTypeInternal _ListEmployeeResponse_default_instance_;
class ListOfAnEmployeesBillRequest;
struct ListOfAnEmployeesBillRequestDefaultTypeInternal;
extern ListOfAnEmployeesBillRequestDefaultTypeInternal _ListOfAnEmployeesBillRequest_default_instance_;
class ListOfAnEmployeesBillResponse;
struct ListOfAnEmployeesBillResponseDefaultTypeInternal;
extern ListOfAnEmployeesBillResponseDefaultTypeInternal _ListOfAnEmployeesBillResponse_default_instance_;
class UpdateEmployeeRequest;
struct UpdateEmployeeRequestDefaultTypeInternal;
extern UpdateEmployeeRequestDefaultTypeInternal _UpdateEmployeeRequest_default_instance_;
class UpdateEmployeeResponse;
struct UpdateEmployeeResponseDefaultTypeInternal;
extern UpdateEmployeeResponseDefaultTypeInternal _UpdateEmployeeResponse_default_instance_;
}  // namespace Services
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs
PROTOBUF_NAMESPACE_OPEN
template<> ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest>(Arena*);
template<> ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Services {

// ===================================================================

class ListEmployeeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse) */ {
 public:
  inline ListEmployeeResponse() : ListEmployeeResponse(nullptr) {}
  virtual ~ListEmployeeResponse();
  explicit constexpr ListEmployeeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListEmployeeResponse(const ListEmployeeResponse& from);
  ListEmployeeResponse(ListEmployeeResponse&& from) noexcept
    : ListEmployeeResponse() {
    *this = ::std::move(from);
  }

  inline ListEmployeeResponse& operator=(const ListEmployeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListEmployeeResponse& operator=(ListEmployeeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListEmployeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListEmployeeResponse* internal_default_instance() {
    return reinterpret_cast<const ListEmployeeResponse*>(
               &_ListEmployeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ListEmployeeResponse& a, ListEmployeeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListEmployeeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListEmployeeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListEmployeeResponse* New() const final {
    return CreateMaybeMessage<ListEmployeeResponse>(nullptr);
  }

  ListEmployeeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListEmployeeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListEmployeeResponse& from);
  void MergeFrom(const ListEmployeeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListEmployeeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse";
  }
  protected:
  explicit ListEmployeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmployeesFieldNumber = 1,
  };
  // repeated .HyperNovaLabs.Api.Protos.Models.Employee employees = 1;
  int employees_size() const;
  private:
  int _internal_employees_size() const;
  public:
  void clear_employees();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employees(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Employee >*
      mutable_employees();
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employees(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_add_employees();
  public:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employees(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* add_employees();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Employee >&
      employees() const;

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Employee > employees_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class GetEmployeeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest) */ {
 public:
  inline GetEmployeeRequest() : GetEmployeeRequest(nullptr) {}
  virtual ~GetEmployeeRequest();
  explicit constexpr GetEmployeeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEmployeeRequest(const GetEmployeeRequest& from);
  GetEmployeeRequest(GetEmployeeRequest&& from) noexcept
    : GetEmployeeRequest() {
    *this = ::std::move(from);
  }

  inline GetEmployeeRequest& operator=(const GetEmployeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEmployeeRequest& operator=(GetEmployeeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetEmployeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEmployeeRequest* internal_default_instance() {
    return reinterpret_cast<const GetEmployeeRequest*>(
               &_GetEmployeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetEmployeeRequest& a, GetEmployeeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEmployeeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEmployeeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetEmployeeRequest* New() const final {
    return CreateMaybeMessage<GetEmployeeRequest>(nullptr);
  }

  GetEmployeeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetEmployeeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetEmployeeRequest& from);
  void MergeFrom(const GetEmployeeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEmployeeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest";
  }
  protected:
  explicit GetEmployeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentificationFieldNumber = 1,
  };
  // string identification = 1;
  void clear_identification();
  const std::string& identification() const;
  void set_identification(const std::string& value);
  void set_identification(std::string&& value);
  void set_identification(const char* value);
  void set_identification(const char* value, size_t size);
  std::string* mutable_identification();
  std::string* release_identification();
  void set_allocated_identification(std::string* identification);
  private:
  const std::string& _internal_identification() const;
  void _internal_set_identification(const std::string& value);
  std::string* _internal_mutable_identification();
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr identification_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class CreateEmployeeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest) */ {
 public:
  inline CreateEmployeeRequest() : CreateEmployeeRequest(nullptr) {}
  virtual ~CreateEmployeeRequest();
  explicit constexpr CreateEmployeeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateEmployeeRequest(const CreateEmployeeRequest& from);
  CreateEmployeeRequest(CreateEmployeeRequest&& from) noexcept
    : CreateEmployeeRequest() {
    *this = ::std::move(from);
  }

  inline CreateEmployeeRequest& operator=(const CreateEmployeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateEmployeeRequest& operator=(CreateEmployeeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateEmployeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateEmployeeRequest* internal_default_instance() {
    return reinterpret_cast<const CreateEmployeeRequest*>(
               &_CreateEmployeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CreateEmployeeRequest& a, CreateEmployeeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateEmployeeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateEmployeeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateEmployeeRequest* New() const final {
    return CreateMaybeMessage<CreateEmployeeRequest>(nullptr);
  }

  CreateEmployeeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateEmployeeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateEmployeeRequest& from);
  void MergeFrom(const CreateEmployeeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateEmployeeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest";
  }
  protected:
  explicit CreateEmployeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmployeeFieldNumber = 1,
  };
  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class CreateEmployeeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse) */ {
 public:
  inline CreateEmployeeResponse() : CreateEmployeeResponse(nullptr) {}
  virtual ~CreateEmployeeResponse();
  explicit constexpr CreateEmployeeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateEmployeeResponse(const CreateEmployeeResponse& from);
  CreateEmployeeResponse(CreateEmployeeResponse&& from) noexcept
    : CreateEmployeeResponse() {
    *this = ::std::move(from);
  }

  inline CreateEmployeeResponse& operator=(const CreateEmployeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateEmployeeResponse& operator=(CreateEmployeeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateEmployeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateEmployeeResponse* internal_default_instance() {
    return reinterpret_cast<const CreateEmployeeResponse*>(
               &_CreateEmployeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CreateEmployeeResponse& a, CreateEmployeeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateEmployeeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateEmployeeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateEmployeeResponse* New() const final {
    return CreateMaybeMessage<CreateEmployeeResponse>(nullptr);
  }

  CreateEmployeeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateEmployeeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateEmployeeResponse& from);
  void MergeFrom(const CreateEmployeeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateEmployeeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse";
  }
  protected:
  explicit CreateEmployeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorsFieldNumber = 3,
    kEmployeeFieldNumber = 1,
    kHasErrorFieldNumber = 2,
  };
  // repeated string errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  const std::string& errors(int index) const;
  std::string* mutable_errors(int index);
  void set_errors(int index, const std::string& value);
  void set_errors(int index, std::string&& value);
  void set_errors(int index, const char* value);
  void set_errors(int index, const char* value, size_t size);
  std::string* add_errors();
  void add_errors(const std::string& value);
  void add_errors(std::string&& value);
  void add_errors(const char* value);
  void add_errors(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& errors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_errors();
  private:
  const std::string& _internal_errors(int index) const;
  std::string* _internal_add_errors();
  public:

  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // bool has_error = 2;
  void clear_has_error();
  bool has_error() const;
  void set_has_error(bool value);
  private:
  bool _internal_has_error() const;
  void _internal_set_has_error(bool value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> errors_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  bool has_error_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class UpdateEmployeeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest) */ {
 public:
  inline UpdateEmployeeRequest() : UpdateEmployeeRequest(nullptr) {}
  virtual ~UpdateEmployeeRequest();
  explicit constexpr UpdateEmployeeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateEmployeeRequest(const UpdateEmployeeRequest& from);
  UpdateEmployeeRequest(UpdateEmployeeRequest&& from) noexcept
    : UpdateEmployeeRequest() {
    *this = ::std::move(from);
  }

  inline UpdateEmployeeRequest& operator=(const UpdateEmployeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateEmployeeRequest& operator=(UpdateEmployeeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateEmployeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateEmployeeRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateEmployeeRequest*>(
               &_UpdateEmployeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UpdateEmployeeRequest& a, UpdateEmployeeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateEmployeeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateEmployeeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateEmployeeRequest* New() const final {
    return CreateMaybeMessage<UpdateEmployeeRequest>(nullptr);
  }

  UpdateEmployeeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateEmployeeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateEmployeeRequest& from);
  void MergeFrom(const UpdateEmployeeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateEmployeeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest";
  }
  protected:
  explicit UpdateEmployeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmployeeFieldNumber = 1,
    kUpdateMaskFieldNumber = 2,
  };
  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class UpdateEmployeeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse) */ {
 public:
  inline UpdateEmployeeResponse() : UpdateEmployeeResponse(nullptr) {}
  virtual ~UpdateEmployeeResponse();
  explicit constexpr UpdateEmployeeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateEmployeeResponse(const UpdateEmployeeResponse& from);
  UpdateEmployeeResponse(UpdateEmployeeResponse&& from) noexcept
    : UpdateEmployeeResponse() {
    *this = ::std::move(from);
  }

  inline UpdateEmployeeResponse& operator=(const UpdateEmployeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateEmployeeResponse& operator=(UpdateEmployeeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateEmployeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateEmployeeResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateEmployeeResponse*>(
               &_UpdateEmployeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(UpdateEmployeeResponse& a, UpdateEmployeeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateEmployeeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateEmployeeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateEmployeeResponse* New() const final {
    return CreateMaybeMessage<UpdateEmployeeResponse>(nullptr);
  }

  UpdateEmployeeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateEmployeeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateEmployeeResponse& from);
  void MergeFrom(const UpdateEmployeeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateEmployeeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse";
  }
  protected:
  explicit UpdateEmployeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorsFieldNumber = 3,
    kEmployeeFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // repeated string errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  const std::string& errors(int index) const;
  std::string* mutable_errors(int index);
  void set_errors(int index, const std::string& value);
  void set_errors(int index, std::string&& value);
  void set_errors(int index, const char* value);
  void set_errors(int index, const char* value, size_t size);
  std::string* add_errors();
  void add_errors(const std::string& value);
  void add_errors(std::string&& value);
  void add_errors(const char* value);
  void add_errors(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& errors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_errors();
  private:
  const std::string& _internal_errors(int index) const;
  std::string* _internal_add_errors();
  public:

  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // bool success = 2;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> errors_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  bool success_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class DeleteEmployeeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest) */ {
 public:
  inline DeleteEmployeeRequest() : DeleteEmployeeRequest(nullptr) {}
  virtual ~DeleteEmployeeRequest();
  explicit constexpr DeleteEmployeeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteEmployeeRequest(const DeleteEmployeeRequest& from);
  DeleteEmployeeRequest(DeleteEmployeeRequest&& from) noexcept
    : DeleteEmployeeRequest() {
    *this = ::std::move(from);
  }

  inline DeleteEmployeeRequest& operator=(const DeleteEmployeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteEmployeeRequest& operator=(DeleteEmployeeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteEmployeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteEmployeeRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteEmployeeRequest*>(
               &_DeleteEmployeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteEmployeeRequest& a, DeleteEmployeeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteEmployeeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteEmployeeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteEmployeeRequest* New() const final {
    return CreateMaybeMessage<DeleteEmployeeRequest>(nullptr);
  }

  DeleteEmployeeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteEmployeeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteEmployeeRequest& from);
  void MergeFrom(const DeleteEmployeeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteEmployeeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest";
  }
  protected:
  explicit DeleteEmployeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentificationFieldNumber = 1,
  };
  // string identification = 1;
  void clear_identification();
  const std::string& identification() const;
  void set_identification(const std::string& value);
  void set_identification(std::string&& value);
  void set_identification(const char* value);
  void set_identification(const char* value, size_t size);
  std::string* mutable_identification();
  std::string* release_identification();
  void set_allocated_identification(std::string* identification);
  private:
  const std::string& _internal_identification() const;
  void _internal_set_identification(const std::string& value);
  std::string* _internal_mutable_identification();
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr identification_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class DeleteEmployeeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse) */ {
 public:
  inline DeleteEmployeeResponse() : DeleteEmployeeResponse(nullptr) {}
  virtual ~DeleteEmployeeResponse();
  explicit constexpr DeleteEmployeeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DeleteEmployeeResponse(const DeleteEmployeeResponse& from);
  DeleteEmployeeResponse(DeleteEmployeeResponse&& from) noexcept
    : DeleteEmployeeResponse() {
    *this = ::std::move(from);
  }

  inline DeleteEmployeeResponse& operator=(const DeleteEmployeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteEmployeeResponse& operator=(DeleteEmployeeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteEmployeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteEmployeeResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteEmployeeResponse*>(
               &_DeleteEmployeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeleteEmployeeResponse& a, DeleteEmployeeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteEmployeeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteEmployeeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteEmployeeResponse* New() const final {
    return CreateMaybeMessage<DeleteEmployeeResponse>(nullptr);
  }

  DeleteEmployeeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteEmployeeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteEmployeeResponse& from);
  void MergeFrom(const DeleteEmployeeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteEmployeeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse";
  }
  protected:
  explicit DeleteEmployeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorsFieldNumber = 3,
    kEmployeeFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // repeated string errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  const std::string& errors(int index) const;
  std::string* mutable_errors(int index);
  void set_errors(int index, const std::string& value);
  void set_errors(int index, std::string&& value);
  void set_errors(int index, const char* value);
  void set_errors(int index, const char* value, size_t size);
  std::string* add_errors();
  void add_errors(const std::string& value);
  void add_errors(std::string&& value);
  void add_errors(const char* value);
  void add_errors(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& errors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_errors();
  private:
  const std::string& _internal_errors(int index) const;
  std::string* _internal_add_errors();
  public:

  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // bool success = 2;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> errors_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  bool success_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class ListOfAnEmployeesBillRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest) */ {
 public:
  inline ListOfAnEmployeesBillRequest() : ListOfAnEmployeesBillRequest(nullptr) {}
  virtual ~ListOfAnEmployeesBillRequest();
  explicit constexpr ListOfAnEmployeesBillRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListOfAnEmployeesBillRequest(const ListOfAnEmployeesBillRequest& from);
  ListOfAnEmployeesBillRequest(ListOfAnEmployeesBillRequest&& from) noexcept
    : ListOfAnEmployeesBillRequest() {
    *this = ::std::move(from);
  }

  inline ListOfAnEmployeesBillRequest& operator=(const ListOfAnEmployeesBillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOfAnEmployeesBillRequest& operator=(ListOfAnEmployeesBillRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListOfAnEmployeesBillRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOfAnEmployeesBillRequest* internal_default_instance() {
    return reinterpret_cast<const ListOfAnEmployeesBillRequest*>(
               &_ListOfAnEmployeesBillRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ListOfAnEmployeesBillRequest& a, ListOfAnEmployeesBillRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOfAnEmployeesBillRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOfAnEmployeesBillRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListOfAnEmployeesBillRequest* New() const final {
    return CreateMaybeMessage<ListOfAnEmployeesBillRequest>(nullptr);
  }

  ListOfAnEmployeesBillRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListOfAnEmployeesBillRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListOfAnEmployeesBillRequest& from);
  void MergeFrom(const ListOfAnEmployeesBillRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOfAnEmployeesBillRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest";
  }
  protected:
  explicit ListOfAnEmployeesBillRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentificationFieldNumber = 1,
  };
  // string identification = 1;
  void clear_identification();
  const std::string& identification() const;
  void set_identification(const std::string& value);
  void set_identification(std::string&& value);
  void set_identification(const char* value);
  void set_identification(const char* value, size_t size);
  std::string* mutable_identification();
  std::string* release_identification();
  void set_allocated_identification(std::string* identification);
  private:
  const std::string& _internal_identification() const;
  void _internal_set_identification(const std::string& value);
  std::string* _internal_mutable_identification();
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr identification_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// -------------------------------------------------------------------

class ListOfAnEmployeesBillResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse) */ {
 public:
  inline ListOfAnEmployeesBillResponse() : ListOfAnEmployeesBillResponse(nullptr) {}
  virtual ~ListOfAnEmployeesBillResponse();
  explicit constexpr ListOfAnEmployeesBillResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListOfAnEmployeesBillResponse(const ListOfAnEmployeesBillResponse& from);
  ListOfAnEmployeesBillResponse(ListOfAnEmployeesBillResponse&& from) noexcept
    : ListOfAnEmployeesBillResponse() {
    *this = ::std::move(from);
  }

  inline ListOfAnEmployeesBillResponse& operator=(const ListOfAnEmployeesBillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOfAnEmployeesBillResponse& operator=(ListOfAnEmployeesBillResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListOfAnEmployeesBillResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOfAnEmployeesBillResponse* internal_default_instance() {
    return reinterpret_cast<const ListOfAnEmployeesBillResponse*>(
               &_ListOfAnEmployeesBillResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ListOfAnEmployeesBillResponse& a, ListOfAnEmployeesBillResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOfAnEmployeesBillResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOfAnEmployeesBillResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListOfAnEmployeesBillResponse* New() const final {
    return CreateMaybeMessage<ListOfAnEmployeesBillResponse>(nullptr);
  }

  ListOfAnEmployeesBillResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListOfAnEmployeesBillResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListOfAnEmployeesBillResponse& from);
  void MergeFrom(const ListOfAnEmployeesBillResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOfAnEmployeesBillResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse";
  }
  protected:
  explicit ListOfAnEmployeesBillResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_EmployeeService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBillsFieldNumber = 2,
    kErrorsFieldNumber = 4,
    kEmployeeFieldNumber = 1,
    kSuccessFieldNumber = 3,
  };
  // repeated .HyperNovaLabs.Api.Protos.Models.Bill bills = 2;
  int bills_size() const;
  private:
  int _internal_bills_size() const;
  public:
  void clear_bills();
  ::HyperNovaLabs::Api::Protos::Models::Bill* mutable_bills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >*
      mutable_bills();
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Bill& _internal_bills(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* _internal_add_bills();
  public:
  const ::HyperNovaLabs::Api::Protos::Models::Bill& bills(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::Bill* add_bills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >&
      bills() const;

  // repeated string errors = 4;
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  const std::string& errors(int index) const;
  std::string* mutable_errors(int index);
  void set_errors(int index, const std::string& value);
  void set_errors(int index, std::string&& value);
  void set_errors(int index, const char* value);
  void set_errors(int index, const char* value, size_t size);
  std::string* add_errors();
  void add_errors(const std::string& value);
  void add_errors(std::string&& value);
  void add_errors(const char* value);
  void add_errors(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& errors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_errors();
  private:
  const std::string& _internal_errors(int index) const;
  std::string* _internal_add_errors();
  public:

  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // bool success = 3;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill > bills_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> errors_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  bool success_;
  friend struct ::TableStruct_EmployeeService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListEmployeeResponse

// repeated .HyperNovaLabs.Api.Protos.Models.Employee employees = 1;
inline int ListEmployeeResponse::_internal_employees_size() const {
  return employees_.size();
}
inline int ListEmployeeResponse::employees_size() const {
  return _internal_employees_size();
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListEmployeeResponse::mutable_employees(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse.employees)
  return employees_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Employee >*
ListEmployeeResponse::mutable_employees() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse.employees)
  return &employees_;
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& ListEmployeeResponse::_internal_employees(int index) const {
  return employees_.Get(index);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& ListEmployeeResponse::employees(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse.employees)
  return _internal_employees(index);
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListEmployeeResponse::_internal_add_employees() {
  return employees_.Add();
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListEmployeeResponse::add_employees() {
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse.employees)
  return _internal_add_employees();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Employee >&
ListEmployeeResponse::employees() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.ListEmployeeResponse.employees)
  return employees_;
}

// -------------------------------------------------------------------

// GetEmployeeRequest

// string identification = 1;
inline void GetEmployeeRequest::clear_identification() {
  identification_.ClearToEmpty();
}
inline const std::string& GetEmployeeRequest::identification() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
  return _internal_identification();
}
inline void GetEmployeeRequest::set_identification(const std::string& value) {
  _internal_set_identification(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
}
inline std::string* GetEmployeeRequest::mutable_identification() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
  return _internal_mutable_identification();
}
inline const std::string& GetEmployeeRequest::_internal_identification() const {
  return identification_.Get();
}
inline void GetEmployeeRequest::_internal_set_identification(const std::string& value) {
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetEmployeeRequest::set_identification(std::string&& value) {
  
  identification_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
}
inline void GetEmployeeRequest::set_identification(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
}
inline void GetEmployeeRequest::set_identification(const char* value,
    size_t size) {
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
}
inline std::string* GetEmployeeRequest::_internal_mutable_identification() {
  
  return identification_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetEmployeeRequest::release_identification() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
  return identification_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetEmployeeRequest::set_allocated_identification(std::string* identification) {
  if (identification != nullptr) {
    
  } else {
    
  }
  identification_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), identification,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.GetEmployeeRequest.identification)
}

// -------------------------------------------------------------------

// CreateEmployeeRequest

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
inline bool CreateEmployeeRequest::_internal_has_employee() const {
  return this != internal_default_instance() && employee_ != nullptr;
}
inline bool CreateEmployeeRequest::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& CreateEmployeeRequest::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& CreateEmployeeRequest::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest.employee)
  return _internal_employee();
}
inline void CreateEmployeeRequest::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeRequest::release_employee() {
  
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeRequest::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest.employee)
  
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeRequest::_internal_mutable_employee() {
  
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeRequest::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest.employee)
  return _internal_mutable_employee();
}
inline void CreateEmployeeRequest::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    
  } else {
    
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateEmployeeRequest.employee)
}

// -------------------------------------------------------------------

// CreateEmployeeResponse

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
inline bool CreateEmployeeResponse::_internal_has_employee() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || employee_ != nullptr);
  return value;
}
inline bool CreateEmployeeResponse::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& CreateEmployeeResponse::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& CreateEmployeeResponse::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.employee)
  return _internal_employee();
}
inline void CreateEmployeeResponse::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeResponse::release_employee() {
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeResponse::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.employee)
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeResponse::_internal_mutable_employee() {
  _has_bits_[0] |= 0x00000001u;
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* CreateEmployeeResponse::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.employee)
  return _internal_mutable_employee();
}
inline void CreateEmployeeResponse::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.employee)
}

// bool has_error = 2;
inline void CreateEmployeeResponse::clear_has_error() {
  has_error_ = false;
}
inline bool CreateEmployeeResponse::_internal_has_error() const {
  return has_error_;
}
inline bool CreateEmployeeResponse::has_error() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.has_error)
  return _internal_has_error();
}
inline void CreateEmployeeResponse::_internal_set_has_error(bool value) {
  
  has_error_ = value;
}
inline void CreateEmployeeResponse::set_has_error(bool value) {
  _internal_set_has_error(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.has_error)
}

// repeated string errors = 3;
inline int CreateEmployeeResponse::_internal_errors_size() const {
  return errors_.size();
}
inline int CreateEmployeeResponse::errors_size() const {
  return _internal_errors_size();
}
inline void CreateEmployeeResponse::clear_errors() {
  errors_.Clear();
}
inline std::string* CreateEmployeeResponse::add_errors() {
  // @@protoc_insertion_point(field_add_mutable:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  return _internal_add_errors();
}
inline const std::string& CreateEmployeeResponse::_internal_errors(int index) const {
  return errors_.Get(index);
}
inline const std::string& CreateEmployeeResponse::errors(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  return _internal_errors(index);
}
inline std::string* CreateEmployeeResponse::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  return errors_.Mutable(index);
}
inline void CreateEmployeeResponse::set_errors(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  errors_.Mutable(index)->assign(value);
}
inline void CreateEmployeeResponse::set_errors(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  errors_.Mutable(index)->assign(std::move(value));
}
inline void CreateEmployeeResponse::set_errors(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
}
inline void CreateEmployeeResponse::set_errors(int index, const char* value, size_t size) {
  errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
}
inline std::string* CreateEmployeeResponse::_internal_add_errors() {
  return errors_.Add();
}
inline void CreateEmployeeResponse::add_errors(const std::string& value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
}
inline void CreateEmployeeResponse::add_errors(std::string&& value) {
  errors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
}
inline void CreateEmployeeResponse::add_errors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
}
inline void CreateEmployeeResponse::add_errors(const char* value, size_t size) {
  errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CreateEmployeeResponse::errors() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CreateEmployeeResponse::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.CreateEmployeeResponse.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// UpdateEmployeeRequest

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
inline bool UpdateEmployeeRequest::_internal_has_employee() const {
  return this != internal_default_instance() && employee_ != nullptr;
}
inline bool UpdateEmployeeRequest::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& UpdateEmployeeRequest::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& UpdateEmployeeRequest::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.employee)
  return _internal_employee();
}
inline void UpdateEmployeeRequest::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeRequest::release_employee() {
  
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeRequest::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.employee)
  
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeRequest::_internal_mutable_employee() {
  
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeRequest::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.employee)
  return _internal_mutable_employee();
}
inline void UpdateEmployeeRequest::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    
  } else {
    
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.employee)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateEmployeeRequest::_internal_has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != nullptr;
}
inline bool UpdateEmployeeRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateEmployeeRequest::_internal_update_mask() const {
  const PROTOBUF_NAMESPACE_ID::FieldMask* p = update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FieldMask&>(
      PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateEmployeeRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.update_mask)
  return _internal_update_mask();
}
inline void UpdateEmployeeRequest::unsafe_arena_set_allocated_update_mask(
    PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask_);
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.update_mask)
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateEmployeeRequest::release_update_mask() {
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = update_mask_;
  update_mask_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateEmployeeRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.update_mask)
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = update_mask_;
  update_mask_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateEmployeeRequest::_internal_mutable_update_mask() {
  
  if (update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FieldMask>(GetArena());
    update_mask_ = p;
  }
  return update_mask_;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateEmployeeRequest::mutable_update_mask() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.update_mask)
  return _internal_mutable_update_mask();
}
inline void UpdateEmployeeRequest::set_allocated_update_mask(PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask)->GetArena();
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeRequest.update_mask)
}

// -------------------------------------------------------------------

// UpdateEmployeeResponse

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
inline bool UpdateEmployeeResponse::_internal_has_employee() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || employee_ != nullptr);
  return value;
}
inline bool UpdateEmployeeResponse::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& UpdateEmployeeResponse::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& UpdateEmployeeResponse::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.employee)
  return _internal_employee();
}
inline void UpdateEmployeeResponse::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeResponse::release_employee() {
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeResponse::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.employee)
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeResponse::_internal_mutable_employee() {
  _has_bits_[0] |= 0x00000001u;
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* UpdateEmployeeResponse::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.employee)
  return _internal_mutable_employee();
}
inline void UpdateEmployeeResponse::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.employee)
}

// bool success = 2;
inline void UpdateEmployeeResponse::clear_success() {
  success_ = false;
}
inline bool UpdateEmployeeResponse::_internal_success() const {
  return success_;
}
inline bool UpdateEmployeeResponse::success() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.success)
  return _internal_success();
}
inline void UpdateEmployeeResponse::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void UpdateEmployeeResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.success)
}

// repeated string errors = 3;
inline int UpdateEmployeeResponse::_internal_errors_size() const {
  return errors_.size();
}
inline int UpdateEmployeeResponse::errors_size() const {
  return _internal_errors_size();
}
inline void UpdateEmployeeResponse::clear_errors() {
  errors_.Clear();
}
inline std::string* UpdateEmployeeResponse::add_errors() {
  // @@protoc_insertion_point(field_add_mutable:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  return _internal_add_errors();
}
inline const std::string& UpdateEmployeeResponse::_internal_errors(int index) const {
  return errors_.Get(index);
}
inline const std::string& UpdateEmployeeResponse::errors(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  return _internal_errors(index);
}
inline std::string* UpdateEmployeeResponse::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  return errors_.Mutable(index);
}
inline void UpdateEmployeeResponse::set_errors(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  errors_.Mutable(index)->assign(value);
}
inline void UpdateEmployeeResponse::set_errors(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  errors_.Mutable(index)->assign(std::move(value));
}
inline void UpdateEmployeeResponse::set_errors(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
}
inline void UpdateEmployeeResponse::set_errors(int index, const char* value, size_t size) {
  errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
}
inline std::string* UpdateEmployeeResponse::_internal_add_errors() {
  return errors_.Add();
}
inline void UpdateEmployeeResponse::add_errors(const std::string& value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
}
inline void UpdateEmployeeResponse::add_errors(std::string&& value) {
  errors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
}
inline void UpdateEmployeeResponse::add_errors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
}
inline void UpdateEmployeeResponse::add_errors(const char* value, size_t size) {
  errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
UpdateEmployeeResponse::errors() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
UpdateEmployeeResponse::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.UpdateEmployeeResponse.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// DeleteEmployeeRequest

// string identification = 1;
inline void DeleteEmployeeRequest::clear_identification() {
  identification_.ClearToEmpty();
}
inline const std::string& DeleteEmployeeRequest::identification() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
  return _internal_identification();
}
inline void DeleteEmployeeRequest::set_identification(const std::string& value) {
  _internal_set_identification(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
}
inline std::string* DeleteEmployeeRequest::mutable_identification() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
  return _internal_mutable_identification();
}
inline const std::string& DeleteEmployeeRequest::_internal_identification() const {
  return identification_.Get();
}
inline void DeleteEmployeeRequest::_internal_set_identification(const std::string& value) {
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteEmployeeRequest::set_identification(std::string&& value) {
  
  identification_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
}
inline void DeleteEmployeeRequest::set_identification(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
}
inline void DeleteEmployeeRequest::set_identification(const char* value,
    size_t size) {
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
}
inline std::string* DeleteEmployeeRequest::_internal_mutable_identification() {
  
  return identification_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteEmployeeRequest::release_identification() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
  return identification_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteEmployeeRequest::set_allocated_identification(std::string* identification) {
  if (identification != nullptr) {
    
  } else {
    
  }
  identification_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), identification,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeRequest.identification)
}

// -------------------------------------------------------------------

// DeleteEmployeeResponse

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
inline bool DeleteEmployeeResponse::_internal_has_employee() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || employee_ != nullptr);
  return value;
}
inline bool DeleteEmployeeResponse::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& DeleteEmployeeResponse::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& DeleteEmployeeResponse::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.employee)
  return _internal_employee();
}
inline void DeleteEmployeeResponse::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* DeleteEmployeeResponse::release_employee() {
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* DeleteEmployeeResponse::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.employee)
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* DeleteEmployeeResponse::_internal_mutable_employee() {
  _has_bits_[0] |= 0x00000001u;
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* DeleteEmployeeResponse::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.employee)
  return _internal_mutable_employee();
}
inline void DeleteEmployeeResponse::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.employee)
}

// bool success = 2;
inline void DeleteEmployeeResponse::clear_success() {
  success_ = false;
}
inline bool DeleteEmployeeResponse::_internal_success() const {
  return success_;
}
inline bool DeleteEmployeeResponse::success() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.success)
  return _internal_success();
}
inline void DeleteEmployeeResponse::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void DeleteEmployeeResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.success)
}

// repeated string errors = 3;
inline int DeleteEmployeeResponse::_internal_errors_size() const {
  return errors_.size();
}
inline int DeleteEmployeeResponse::errors_size() const {
  return _internal_errors_size();
}
inline void DeleteEmployeeResponse::clear_errors() {
  errors_.Clear();
}
inline std::string* DeleteEmployeeResponse::add_errors() {
  // @@protoc_insertion_point(field_add_mutable:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  return _internal_add_errors();
}
inline const std::string& DeleteEmployeeResponse::_internal_errors(int index) const {
  return errors_.Get(index);
}
inline const std::string& DeleteEmployeeResponse::errors(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  return _internal_errors(index);
}
inline std::string* DeleteEmployeeResponse::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  return errors_.Mutable(index);
}
inline void DeleteEmployeeResponse::set_errors(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  errors_.Mutable(index)->assign(value);
}
inline void DeleteEmployeeResponse::set_errors(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  errors_.Mutable(index)->assign(std::move(value));
}
inline void DeleteEmployeeResponse::set_errors(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
}
inline void DeleteEmployeeResponse::set_errors(int index, const char* value, size_t size) {
  errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
}
inline std::string* DeleteEmployeeResponse::_internal_add_errors() {
  return errors_.Add();
}
inline void DeleteEmployeeResponse::add_errors(const std::string& value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
}
inline void DeleteEmployeeResponse::add_errors(std::string&& value) {
  errors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
}
inline void DeleteEmployeeResponse::add_errors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
}
inline void DeleteEmployeeResponse::add_errors(const char* value, size_t size) {
  errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DeleteEmployeeResponse::errors() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DeleteEmployeeResponse::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.DeleteEmployeeResponse.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// ListOfAnEmployeesBillRequest

// string identification = 1;
inline void ListOfAnEmployeesBillRequest::clear_identification() {
  identification_.ClearToEmpty();
}
inline const std::string& ListOfAnEmployeesBillRequest::identification() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
  return _internal_identification();
}
inline void ListOfAnEmployeesBillRequest::set_identification(const std::string& value) {
  _internal_set_identification(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
}
inline std::string* ListOfAnEmployeesBillRequest::mutable_identification() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
  return _internal_mutable_identification();
}
inline const std::string& ListOfAnEmployeesBillRequest::_internal_identification() const {
  return identification_.Get();
}
inline void ListOfAnEmployeesBillRequest::_internal_set_identification(const std::string& value) {
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListOfAnEmployeesBillRequest::set_identification(std::string&& value) {
  
  identification_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
}
inline void ListOfAnEmployeesBillRequest::set_identification(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
}
inline void ListOfAnEmployeesBillRequest::set_identification(const char* value,
    size_t size) {
  
  identification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
}
inline std::string* ListOfAnEmployeesBillRequest::_internal_mutable_identification() {
  
  return identification_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListOfAnEmployeesBillRequest::release_identification() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
  return identification_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListOfAnEmployeesBillRequest::set_allocated_identification(std::string* identification) {
  if (identification != nullptr) {
    
  } else {
    
  }
  identification_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), identification,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillRequest.identification)
}

// -------------------------------------------------------------------

// ListOfAnEmployeesBillResponse

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 1;
inline bool ListOfAnEmployeesBillResponse::_internal_has_employee() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || employee_ != nullptr);
  return value;
}
inline bool ListOfAnEmployeesBillResponse::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& ListOfAnEmployeesBillResponse::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& ListOfAnEmployeesBillResponse::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.employee)
  return _internal_employee();
}
inline void ListOfAnEmployeesBillResponse::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListOfAnEmployeesBillResponse::release_employee() {
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListOfAnEmployeesBillResponse::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.employee)
  _has_bits_[0] &= ~0x00000001u;
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListOfAnEmployeesBillResponse::_internal_mutable_employee() {
  _has_bits_[0] |= 0x00000001u;
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* ListOfAnEmployeesBillResponse::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.employee)
  return _internal_mutable_employee();
}
inline void ListOfAnEmployeesBillResponse::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.employee)
}

// repeated .HyperNovaLabs.Api.Protos.Models.Bill bills = 2;
inline int ListOfAnEmployeesBillResponse::_internal_bills_size() const {
  return bills_.size();
}
inline int ListOfAnEmployeesBillResponse::bills_size() const {
  return _internal_bills_size();
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* ListOfAnEmployeesBillResponse::mutable_bills(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.bills)
  return bills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >*
ListOfAnEmployeesBillResponse::mutable_bills() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.bills)
  return &bills_;
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& ListOfAnEmployeesBillResponse::_internal_bills(int index) const {
  return bills_.Get(index);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Bill& ListOfAnEmployeesBillResponse::bills(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.bills)
  return _internal_bills(index);
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* ListOfAnEmployeesBillResponse::_internal_add_bills() {
  return bills_.Add();
}
inline ::HyperNovaLabs::Api::Protos::Models::Bill* ListOfAnEmployeesBillResponse::add_bills() {
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.bills)
  return _internal_add_bills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::Bill >&
ListOfAnEmployeesBillResponse::bills() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.bills)
  return bills_;
}

// bool success = 3;
inline void ListOfAnEmployeesBillResponse::clear_success() {
  success_ = false;
}
inline bool ListOfAnEmployeesBillResponse::_internal_success() const {
  return success_;
}
inline bool ListOfAnEmployeesBillResponse::success() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.success)
  return _internal_success();
}
inline void ListOfAnEmployeesBillResponse::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void ListOfAnEmployeesBillResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.success)
}

// repeated string errors = 4;
inline int ListOfAnEmployeesBillResponse::_internal_errors_size() const {
  return errors_.size();
}
inline int ListOfAnEmployeesBillResponse::errors_size() const {
  return _internal_errors_size();
}
inline void ListOfAnEmployeesBillResponse::clear_errors() {
  errors_.Clear();
}
inline std::string* ListOfAnEmployeesBillResponse::add_errors() {
  // @@protoc_insertion_point(field_add_mutable:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  return _internal_add_errors();
}
inline const std::string& ListOfAnEmployeesBillResponse::_internal_errors(int index) const {
  return errors_.Get(index);
}
inline const std::string& ListOfAnEmployeesBillResponse::errors(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  return _internal_errors(index);
}
inline std::string* ListOfAnEmployeesBillResponse::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  return errors_.Mutable(index);
}
inline void ListOfAnEmployeesBillResponse::set_errors(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  errors_.Mutable(index)->assign(value);
}
inline void ListOfAnEmployeesBillResponse::set_errors(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  errors_.Mutable(index)->assign(std::move(value));
}
inline void ListOfAnEmployeesBillResponse::set_errors(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
}
inline void ListOfAnEmployeesBillResponse::set_errors(int index, const char* value, size_t size) {
  errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
}
inline std::string* ListOfAnEmployeesBillResponse::_internal_add_errors() {
  return errors_.Add();
}
inline void ListOfAnEmployeesBillResponse::add_errors(const std::string& value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
}
inline void ListOfAnEmployeesBillResponse::add_errors(std::string&& value) {
  errors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
}
inline void ListOfAnEmployeesBillResponse::add_errors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
}
inline void ListOfAnEmployeesBillResponse::add_errors(const char* value, size_t size) {
  errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ListOfAnEmployeesBillResponse::errors() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ListOfAnEmployeesBillResponse::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Services.ListOfAnEmployeesBillResponse.errors)
  return &errors_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Services
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_EmployeeService_2eproto
