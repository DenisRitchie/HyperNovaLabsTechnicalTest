// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Models/BillDescription.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Models_2fBillDescription_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Models_2fBillDescription_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Models_2fBillDescription_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Models_2fBillDescription_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Models_2fBillDescription_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_Models_2fBillDescription_2eproto_metadata_getter(int index);
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Models {
class BillDescription;
struct BillDescriptionDefaultTypeInternal;
extern BillDescriptionDefaultTypeInternal _BillDescription_default_instance_;
}  // namespace Models
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs
PROTOBUF_NAMESPACE_OPEN
template<> ::HyperNovaLabs::Api::Protos::Models::BillDescription* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::BillDescription>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Models {

// ===================================================================

class BillDescription PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Models.BillDescription) */ {
 public:
  inline BillDescription() : BillDescription(nullptr) {}
  virtual ~BillDescription();
  explicit constexpr BillDescription(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BillDescription(const BillDescription& from);
  BillDescription(BillDescription&& from) noexcept
    : BillDescription() {
    *this = ::std::move(from);
  }

  inline BillDescription& operator=(const BillDescription& from) {
    CopyFrom(from);
    return *this;
  }
  inline BillDescription& operator=(BillDescription&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BillDescription& default_instance() {
    return *internal_default_instance();
  }
  static inline const BillDescription* internal_default_instance() {
    return reinterpret_cast<const BillDescription*>(
               &_BillDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BillDescription& a, BillDescription& b) {
    a.Swap(&b);
  }
  inline void Swap(BillDescription* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BillDescription* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BillDescription* New() const final {
    return CreateMaybeMessage<BillDescription>(nullptr);
  }

  BillDescription* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BillDescription>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BillDescription& from);
  void MergeFrom(const BillDescription& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BillDescription* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Models.BillDescription";
  }
  protected:
  explicit BillDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_Models_2fBillDescription_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionFieldNumber = 4,
    kDateFieldNumber = 1,
    kPriceFieldNumber = 3,
    kTotalFieldNumber = 5,
    kQuantityFieldNumber = 2,
  };
  // string description = 4;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // .google.protobuf.Timestamp date = 1;
  bool has_date() const;
  private:
  bool _internal_has_date() const;
  public:
  void clear_date();
  const PROTOBUF_NAMESPACE_ID::Timestamp& date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_date();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_date();
  void set_allocated_date(PROTOBUF_NAMESPACE_ID::Timestamp* date);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_date() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_date();
  public:
  void unsafe_arena_set_allocated_date(
      PROTOBUF_NAMESPACE_ID::Timestamp* date);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_date();

  // double price = 3;
  void clear_price();
  double price() const;
  void set_price(double value);
  private:
  double _internal_price() const;
  void _internal_set_price(double value);
  public:

  // double total = 5;
  void clear_total();
  double total() const;
  void set_total(double value);
  private:
  double _internal_total() const;
  void _internal_set_total(double value);
  public:

  // int32 quantity = 2;
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::int32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Models.BillDescription)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  PROTOBUF_NAMESPACE_ID::Timestamp* date_;
  double price_;
  double total_;
  ::PROTOBUF_NAMESPACE_ID::int32 quantity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Models_2fBillDescription_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BillDescription

// .google.protobuf.Timestamp date = 1;
inline bool BillDescription::_internal_has_date() const {
  return this != internal_default_instance() && date_ != nullptr;
}
inline bool BillDescription::has_date() const {
  return _internal_has_date();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& BillDescription::_internal_date() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = date_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& BillDescription::date() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.BillDescription.date)
  return _internal_date();
}
inline void BillDescription::unsafe_arena_set_allocated_date(
    PROTOBUF_NAMESPACE_ID::Timestamp* date) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_);
  }
  date_ = date;
  if (date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Models.BillDescription.date)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* BillDescription::release_date() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = date_;
  date_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* BillDescription::unsafe_arena_release_date() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.BillDescription.date)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = date_;
  date_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* BillDescription::_internal_mutable_date() {
  
  if (date_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    date_ = p;
  }
  return date_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* BillDescription::mutable_date() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.BillDescription.date)
  return _internal_mutable_date();
}
inline void BillDescription::set_allocated_date(PROTOBUF_NAMESPACE_ID::Timestamp* date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_);
  }
  if (date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(date)->GetArena();
    if (message_arena != submessage_arena) {
      date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    
  } else {
    
  }
  date_ = date;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.BillDescription.date)
}

// int32 quantity = 2;
inline void BillDescription::clear_quantity() {
  quantity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BillDescription::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BillDescription::quantity() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.BillDescription.quantity)
  return _internal_quantity();
}
inline void BillDescription::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  quantity_ = value;
}
inline void BillDescription::set_quantity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Models.BillDescription.quantity)
}

// double price = 3;
inline void BillDescription::clear_price() {
  price_ = 0;
}
inline double BillDescription::_internal_price() const {
  return price_;
}
inline double BillDescription::price() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.BillDescription.price)
  return _internal_price();
}
inline void BillDescription::_internal_set_price(double value) {
  
  price_ = value;
}
inline void BillDescription::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Models.BillDescription.price)
}

// string description = 4;
inline void BillDescription::clear_description() {
  description_.ClearToEmpty();
}
inline const std::string& BillDescription::description() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
  return _internal_description();
}
inline void BillDescription::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
}
inline std::string* BillDescription::mutable_description() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
  return _internal_mutable_description();
}
inline const std::string& BillDescription::_internal_description() const {
  return description_.Get();
}
inline void BillDescription::_internal_set_description(const std::string& value) {
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BillDescription::set_description(std::string&& value) {
  
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
}
inline void BillDescription::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
}
inline void BillDescription::set_description(const char* value,
    size_t size) {
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
}
inline std::string* BillDescription::_internal_mutable_description() {
  
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BillDescription::release_description() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BillDescription::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.BillDescription.description)
}

// double total = 5;
inline void BillDescription::clear_total() {
  total_ = 0;
}
inline double BillDescription::_internal_total() const {
  return total_;
}
inline double BillDescription::total() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.BillDescription.total)
  return _internal_total();
}
inline void BillDescription::_internal_set_total(double value) {
  
  total_ = value;
}
inline void BillDescription::set_total(double value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Models.BillDescription.total)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Models
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Models_2fBillDescription_2eproto
