// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Models/Bill.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Models_2fBill_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Models_2fBill_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include "Models/BillDescription.pb.h"
#include "Models/Employee.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Models_2fBill_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Models_2fBill_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Models_2fBill_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_Models_2fBill_2eproto_metadata_getter(int index);
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Models {
class Bill;
struct BillDefaultTypeInternal;
extern BillDefaultTypeInternal _Bill_default_instance_;
}  // namespace Models
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs
PROTOBUF_NAMESPACE_OPEN
template<> ::HyperNovaLabs::Api::Protos::Models::Bill* Arena::CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Bill>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Models {

// ===================================================================

class Bill PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HyperNovaLabs.Api.Protos.Models.Bill) */ {
 public:
  inline Bill() : Bill(nullptr) {}
  virtual ~Bill();
  explicit constexpr Bill(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Bill(const Bill& from);
  Bill(Bill&& from) noexcept
    : Bill() {
    *this = ::std::move(from);
  }

  inline Bill& operator=(const Bill& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bill& operator=(Bill&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Bill& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bill* internal_default_instance() {
    return reinterpret_cast<const Bill*>(
               &_Bill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Bill& a, Bill& b) {
    a.Swap(&b);
  }
  inline void Swap(Bill* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bill* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Bill* New() const final {
    return CreateMaybeMessage<Bill>(nullptr);
  }

  Bill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Bill>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Bill& from);
  void MergeFrom(const Bill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HyperNovaLabs.Api.Protos.Models.Bill";
  }
  protected:
  explicit Bill(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_Models_2fBill_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBillDescriptionsFieldNumber = 6,
    kBillConceptFieldNumber = 1,
    kApprovedByFieldNumber = 4,
    kDateFromFieldNumber = 2,
    kDateToFieldNumber = 3,
    kEmployeeFieldNumber = 5,
  };
  // repeated .HyperNovaLabs.Api.Protos.Models.BillDescription bill_descriptions = 6;
  int bill_descriptions_size() const;
  private:
  int _internal_bill_descriptions_size() const;
  public:
  void clear_bill_descriptions();
  ::HyperNovaLabs::Api::Protos::Models::BillDescription* mutable_bill_descriptions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::BillDescription >*
      mutable_bill_descriptions();
  private:
  const ::HyperNovaLabs::Api::Protos::Models::BillDescription& _internal_bill_descriptions(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::BillDescription* _internal_add_bill_descriptions();
  public:
  const ::HyperNovaLabs::Api::Protos::Models::BillDescription& bill_descriptions(int index) const;
  ::HyperNovaLabs::Api::Protos::Models::BillDescription* add_bill_descriptions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::BillDescription >&
      bill_descriptions() const;

  // string bill_concept = 1;
  void clear_bill_concept();
  const std::string& bill_concept() const;
  void set_bill_concept(const std::string& value);
  void set_bill_concept(std::string&& value);
  void set_bill_concept(const char* value);
  void set_bill_concept(const char* value, size_t size);
  std::string* mutable_bill_concept();
  std::string* release_bill_concept();
  void set_allocated_bill_concept(std::string* bill_concept);
  private:
  const std::string& _internal_bill_concept() const;
  void _internal_set_bill_concept(const std::string& value);
  std::string* _internal_mutable_bill_concept();
  public:

  // string approved_by = 4;
  void clear_approved_by();
  const std::string& approved_by() const;
  void set_approved_by(const std::string& value);
  void set_approved_by(std::string&& value);
  void set_approved_by(const char* value);
  void set_approved_by(const char* value, size_t size);
  std::string* mutable_approved_by();
  std::string* release_approved_by();
  void set_allocated_approved_by(std::string* approved_by);
  private:
  const std::string& _internal_approved_by() const;
  void _internal_set_approved_by(const std::string& value);
  std::string* _internal_mutable_approved_by();
  public:

  // .google.protobuf.Timestamp date_from = 2;
  bool has_date_from() const;
  private:
  bool _internal_has_date_from() const;
  public:
  void clear_date_from();
  const PROTOBUF_NAMESPACE_ID::Timestamp& date_from() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_date_from();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_date_from();
  void set_allocated_date_from(PROTOBUF_NAMESPACE_ID::Timestamp* date_from);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_date_from() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_date_from();
  public:
  void unsafe_arena_set_allocated_date_from(
      PROTOBUF_NAMESPACE_ID::Timestamp* date_from);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_date_from();

  // .google.protobuf.Timestamp date_to = 3;
  bool has_date_to() const;
  private:
  bool _internal_has_date_to() const;
  public:
  void clear_date_to();
  const PROTOBUF_NAMESPACE_ID::Timestamp& date_to() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_date_to();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_date_to();
  void set_allocated_date_to(PROTOBUF_NAMESPACE_ID::Timestamp* date_to);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_date_to() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_date_to();
  public:
  void unsafe_arena_set_allocated_date_to(
      PROTOBUF_NAMESPACE_ID::Timestamp* date_to);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_date_to();

  // .HyperNovaLabs.Api.Protos.Models.Employee employee = 5;
  bool has_employee() const;
  private:
  bool _internal_has_employee() const;
  public:
  void clear_employee();
  const ::HyperNovaLabs::Api::Protos::Models::Employee& employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* release_employee();
  ::HyperNovaLabs::Api::Protos::Models::Employee* mutable_employee();
  void set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  private:
  const ::HyperNovaLabs::Api::Protos::Models::Employee& _internal_employee() const;
  ::HyperNovaLabs::Api::Protos::Models::Employee* _internal_mutable_employee();
  public:
  void unsafe_arena_set_allocated_employee(
      ::HyperNovaLabs::Api::Protos::Models::Employee* employee);
  ::HyperNovaLabs::Api::Protos::Models::Employee* unsafe_arena_release_employee();

  // @@protoc_insertion_point(class_scope:HyperNovaLabs.Api.Protos.Models.Bill)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::BillDescription > bill_descriptions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bill_concept_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr approved_by_;
  PROTOBUF_NAMESPACE_ID::Timestamp* date_from_;
  PROTOBUF_NAMESPACE_ID::Timestamp* date_to_;
  ::HyperNovaLabs::Api::Protos::Models::Employee* employee_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Models_2fBill_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Bill

// string bill_concept = 1;
inline void Bill::clear_bill_concept() {
  bill_concept_.ClearToEmpty();
}
inline const std::string& Bill::bill_concept() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
  return _internal_bill_concept();
}
inline void Bill::set_bill_concept(const std::string& value) {
  _internal_set_bill_concept(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
}
inline std::string* Bill::mutable_bill_concept() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
  return _internal_mutable_bill_concept();
}
inline const std::string& Bill::_internal_bill_concept() const {
  return bill_concept_.Get();
}
inline void Bill::_internal_set_bill_concept(const std::string& value) {
  
  bill_concept_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Bill::set_bill_concept(std::string&& value) {
  
  bill_concept_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
}
inline void Bill::set_bill_concept(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bill_concept_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
}
inline void Bill::set_bill_concept(const char* value,
    size_t size) {
  
  bill_concept_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
}
inline std::string* Bill::_internal_mutable_bill_concept() {
  
  return bill_concept_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Bill::release_bill_concept() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
  return bill_concept_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Bill::set_allocated_bill_concept(std::string* bill_concept) {
  if (bill_concept != nullptr) {
    
  } else {
    
  }
  bill_concept_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bill_concept,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.bill_concept)
}

// .google.protobuf.Timestamp date_from = 2;
inline bool Bill::_internal_has_date_from() const {
  return this != internal_default_instance() && date_from_ != nullptr;
}
inline bool Bill::has_date_from() const {
  return _internal_has_date_from();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Bill::_internal_date_from() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = date_from_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Bill::date_from() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.Bill.date_from)
  return _internal_date_from();
}
inline void Bill::unsafe_arena_set_allocated_date_from(
    PROTOBUF_NAMESPACE_ID::Timestamp* date_from) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_from_);
  }
  date_from_ = date_from;
  if (date_from) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.date_from)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::release_date_from() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = date_from_;
  date_from_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::unsafe_arena_release_date_from() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.Bill.date_from)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = date_from_;
  date_from_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::_internal_mutable_date_from() {
  
  if (date_from_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    date_from_ = p;
  }
  return date_from_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::mutable_date_from() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.Bill.date_from)
  return _internal_mutable_date_from();
}
inline void Bill::set_allocated_date_from(PROTOBUF_NAMESPACE_ID::Timestamp* date_from) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_from_);
  }
  if (date_from) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_from)->GetArena();
    if (message_arena != submessage_arena) {
      date_from = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, date_from, submessage_arena);
    }
    
  } else {
    
  }
  date_from_ = date_from;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.date_from)
}

// .google.protobuf.Timestamp date_to = 3;
inline bool Bill::_internal_has_date_to() const {
  return this != internal_default_instance() && date_to_ != nullptr;
}
inline bool Bill::has_date_to() const {
  return _internal_has_date_to();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Bill::_internal_date_to() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = date_to_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Bill::date_to() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.Bill.date_to)
  return _internal_date_to();
}
inline void Bill::unsafe_arena_set_allocated_date_to(
    PROTOBUF_NAMESPACE_ID::Timestamp* date_to) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_to_);
  }
  date_to_ = date_to;
  if (date_to) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.date_to)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::release_date_to() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = date_to_;
  date_to_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::unsafe_arena_release_date_to() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.Bill.date_to)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = date_to_;
  date_to_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::_internal_mutable_date_to() {
  
  if (date_to_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    date_to_ = p;
  }
  return date_to_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Bill::mutable_date_to() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.Bill.date_to)
  return _internal_mutable_date_to();
}
inline void Bill::set_allocated_date_to(PROTOBUF_NAMESPACE_ID::Timestamp* date_to) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_to_);
  }
  if (date_to) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(date_to)->GetArena();
    if (message_arena != submessage_arena) {
      date_to = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, date_to, submessage_arena);
    }
    
  } else {
    
  }
  date_to_ = date_to;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.date_to)
}

// string approved_by = 4;
inline void Bill::clear_approved_by() {
  approved_by_.ClearToEmpty();
}
inline const std::string& Bill::approved_by() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
  return _internal_approved_by();
}
inline void Bill::set_approved_by(const std::string& value) {
  _internal_set_approved_by(value);
  // @@protoc_insertion_point(field_set:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
}
inline std::string* Bill::mutable_approved_by() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
  return _internal_mutable_approved_by();
}
inline const std::string& Bill::_internal_approved_by() const {
  return approved_by_.Get();
}
inline void Bill::_internal_set_approved_by(const std::string& value) {
  
  approved_by_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Bill::set_approved_by(std::string&& value) {
  
  approved_by_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
}
inline void Bill::set_approved_by(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  approved_by_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
}
inline void Bill::set_approved_by(const char* value,
    size_t size) {
  
  approved_by_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
}
inline std::string* Bill::_internal_mutable_approved_by() {
  
  return approved_by_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Bill::release_approved_by() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
  return approved_by_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Bill::set_allocated_approved_by(std::string* approved_by) {
  if (approved_by != nullptr) {
    
  } else {
    
  }
  approved_by_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), approved_by,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.approved_by)
}

// .HyperNovaLabs.Api.Protos.Models.Employee employee = 5;
inline bool Bill::_internal_has_employee() const {
  return this != internal_default_instance() && employee_ != nullptr;
}
inline bool Bill::has_employee() const {
  return _internal_has_employee();
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& Bill::_internal_employee() const {
  const ::HyperNovaLabs::Api::Protos::Models::Employee* p = employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::HyperNovaLabs::Api::Protos::Models::Employee&>(
      ::HyperNovaLabs::Api::Protos::Models::_Employee_default_instance_);
}
inline const ::HyperNovaLabs::Api::Protos::Models::Employee& Bill::employee() const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.Bill.employee)
  return _internal_employee();
}
inline void Bill::unsafe_arena_set_allocated_employee(
    ::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  employee_ = employee;
  if (employee) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.employee)
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* Bill::release_employee() {
  
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* Bill::unsafe_arena_release_employee() {
  // @@protoc_insertion_point(field_release:HyperNovaLabs.Api.Protos.Models.Bill.employee)
  
  ::HyperNovaLabs::Api::Protos::Models::Employee* temp = employee_;
  employee_ = nullptr;
  return temp;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* Bill::_internal_mutable_employee() {
  
  if (employee_ == nullptr) {
    auto* p = CreateMaybeMessage<::HyperNovaLabs::Api::Protos::Models::Employee>(GetArena());
    employee_ = p;
  }
  return employee_;
}
inline ::HyperNovaLabs::Api::Protos::Models::Employee* Bill::mutable_employee() {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.Bill.employee)
  return _internal_mutable_employee();
}
inline void Bill::set_allocated_employee(::HyperNovaLabs::Api::Protos::Models::Employee* employee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee_);
  }
  if (employee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(employee)->GetArena();
    if (message_arena != submessage_arena) {
      employee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, employee, submessage_arena);
    }
    
  } else {
    
  }
  employee_ = employee;
  // @@protoc_insertion_point(field_set_allocated:HyperNovaLabs.Api.Protos.Models.Bill.employee)
}

// repeated .HyperNovaLabs.Api.Protos.Models.BillDescription bill_descriptions = 6;
inline int Bill::_internal_bill_descriptions_size() const {
  return bill_descriptions_.size();
}
inline int Bill::bill_descriptions_size() const {
  return _internal_bill_descriptions_size();
}
inline ::HyperNovaLabs::Api::Protos::Models::BillDescription* Bill::mutable_bill_descriptions(int index) {
  // @@protoc_insertion_point(field_mutable:HyperNovaLabs.Api.Protos.Models.Bill.bill_descriptions)
  return bill_descriptions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::BillDescription >*
Bill::mutable_bill_descriptions() {
  // @@protoc_insertion_point(field_mutable_list:HyperNovaLabs.Api.Protos.Models.Bill.bill_descriptions)
  return &bill_descriptions_;
}
inline const ::HyperNovaLabs::Api::Protos::Models::BillDescription& Bill::_internal_bill_descriptions(int index) const {
  return bill_descriptions_.Get(index);
}
inline const ::HyperNovaLabs::Api::Protos::Models::BillDescription& Bill::bill_descriptions(int index) const {
  // @@protoc_insertion_point(field_get:HyperNovaLabs.Api.Protos.Models.Bill.bill_descriptions)
  return _internal_bill_descriptions(index);
}
inline ::HyperNovaLabs::Api::Protos::Models::BillDescription* Bill::_internal_add_bill_descriptions() {
  return bill_descriptions_.Add();
}
inline ::HyperNovaLabs::Api::Protos::Models::BillDescription* Bill::add_bill_descriptions() {
  // @@protoc_insertion_point(field_add:HyperNovaLabs.Api.Protos.Models.Bill.bill_descriptions)
  return _internal_add_bill_descriptions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HyperNovaLabs::Api::Protos::Models::BillDescription >&
Bill::bill_descriptions() const {
  // @@protoc_insertion_point(field_list:HyperNovaLabs.Api.Protos.Models.Bill.bill_descriptions)
  return bill_descriptions_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Models
}  // namespace Protos
}  // namespace Api
}  // namespace HyperNovaLabs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Models_2fBill_2eproto
