// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: EmployeeService.proto

#include "EmployeeService.pb.h"
#include "EmployeeService.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Services {

static const char* EmployeeService_method_names[] = {
  "/HyperNovaLabs.Api.Protos.Services.EmployeeService/ListEmployee",
  "/HyperNovaLabs.Api.Protos.Services.EmployeeService/GetEmployee",
  "/HyperNovaLabs.Api.Protos.Services.EmployeeService/CreateEmployee",
  "/HyperNovaLabs.Api.Protos.Services.EmployeeService/UpdateEmployee",
  "/HyperNovaLabs.Api.Protos.Services.EmployeeService/DeleteEmployee",
  "/HyperNovaLabs.Api.Protos.Services.EmployeeService/ListOfAnEmployeeBills",
};

std::unique_ptr< EmployeeService::Stub> EmployeeService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< EmployeeService::Stub> stub(new EmployeeService::Stub(channel, options));
  return stub;
}

EmployeeService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_ListEmployee_(EmployeeService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetEmployee_(EmployeeService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateEmployee_(EmployeeService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateEmployee_(EmployeeService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEmployee_(EmployeeService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListOfAnEmployeeBills_(EmployeeService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status EmployeeService::Stub::ListEmployee(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListEmployee_, context, request, response);
}

void EmployeeService::Stub::async::ListEmployee(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListEmployee_, context, request, response, std::move(f));
}

void EmployeeService::Stub::async::ListEmployee(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListEmployee_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse>* EmployeeService::Stub::PrepareAsyncListEmployeeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListEmployee_, context, request);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse>* EmployeeService::Stub::AsyncListEmployeeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListEmployeeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status EmployeeService::Stub::GetEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest& request, ::HyperNovaLabs::Api::Protos::Models::Employee* response) {
  return ::grpc::internal::BlockingUnaryCall< ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest, ::HyperNovaLabs::Api::Protos::Models::Employee, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetEmployee_, context, request, response);
}

void EmployeeService::Stub::async::GetEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Models::Employee* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest, ::HyperNovaLabs::Api::Protos::Models::Employee, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEmployee_, context, request, response, std::move(f));
}

void EmployeeService::Stub::async::GetEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Models::Employee* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEmployee_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Models::Employee>* EmployeeService::Stub::PrepareAsyncGetEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::HyperNovaLabs::Api::Protos::Models::Employee, ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetEmployee_, context, request);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Models::Employee>* EmployeeService::Stub::AsyncGetEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetEmployeeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status EmployeeService::Stub::CreateEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest& request, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateEmployee_, context, request, response);
}

void EmployeeService::Stub::async::CreateEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateEmployee_, context, request, response, std::move(f));
}

void EmployeeService::Stub::async::CreateEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateEmployee_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse>* EmployeeService::Stub::PrepareAsyncCreateEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateEmployee_, context, request);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse>* EmployeeService::Stub::AsyncCreateEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateEmployeeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status EmployeeService::Stub::UpdateEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest& request, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateEmployee_, context, request, response);
}

void EmployeeService::Stub::async::UpdateEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEmployee_, context, request, response, std::move(f));
}

void EmployeeService::Stub::async::UpdateEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEmployee_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse>* EmployeeService::Stub::PrepareAsyncUpdateEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateEmployee_, context, request);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse>* EmployeeService::Stub::AsyncUpdateEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateEmployeeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status EmployeeService::Stub::DeleteEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest& request, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteEmployee_, context, request, response);
}

void EmployeeService::Stub::async::DeleteEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteEmployee_, context, request, response, std::move(f));
}

void EmployeeService::Stub::async::DeleteEmployee(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteEmployee_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse>* EmployeeService::Stub::PrepareAsyncDeleteEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteEmployee_, context, request);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse>* EmployeeService::Stub::AsyncDeleteEmployeeRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteEmployeeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status EmployeeService::Stub::ListOfAnEmployeeBills(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest& request, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListOfAnEmployeeBills_, context, request, response);
}

void EmployeeService::Stub::async::ListOfAnEmployeeBills(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest* request, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListOfAnEmployeeBills_, context, request, response, std::move(f));
}

void EmployeeService::Stub::async::ListOfAnEmployeeBills(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest* request, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListOfAnEmployeeBills_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse>* EmployeeService::Stub::PrepareAsyncListOfAnEmployeeBillsRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListOfAnEmployeeBills_, context, request);
}

::grpc::ClientAsyncResponseReader< ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse>* EmployeeService::Stub::AsyncListOfAnEmployeeBillsRaw(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListOfAnEmployeeBillsRaw(context, request, cq);
  result->StartCall();
  return result;
}

EmployeeService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EmployeeService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EmployeeService::Service, ::google::protobuf::Empty, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EmployeeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse* resp) {
               return service->ListEmployee(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EmployeeService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EmployeeService::Service, ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest, ::HyperNovaLabs::Api::Protos::Models::Employee, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EmployeeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest* req,
             ::HyperNovaLabs::Api::Protos::Models::Employee* resp) {
               return service->GetEmployee(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EmployeeService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EmployeeService::Service, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EmployeeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest* req,
             ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse* resp) {
               return service->CreateEmployee(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EmployeeService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EmployeeService::Service, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EmployeeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest* req,
             ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse* resp) {
               return service->UpdateEmployee(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EmployeeService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EmployeeService::Service, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EmployeeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest* req,
             ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse* resp) {
               return service->DeleteEmployee(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EmployeeService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EmployeeService::Service, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EmployeeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest* req,
             ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse* resp) {
               return service->ListOfAnEmployeeBills(ctx, req, resp);
             }, this)));
}

EmployeeService::Service::~Service() {
}

::grpc::Status EmployeeService::Service::ListEmployee(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::HyperNovaLabs::Api::Protos::Services::ListEmployeeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EmployeeService::Service::GetEmployee(::grpc::ServerContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Models::Employee* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EmployeeService::Service::CreateEmployee(::grpc::ServerContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::CreateEmployeeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EmployeeService::Service::UpdateEmployee(::grpc::ServerContext* context, const ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::UpdateEmployeeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EmployeeService::Service::DeleteEmployee(::grpc::ServerContext* context, const ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeRequest* request, ::HyperNovaLabs::Api::Protos::Services::DeleteEmployeeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EmployeeService::Service::ListOfAnEmployeeBills(::grpc::ServerContext* context, const ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillRequest* request, ::HyperNovaLabs::Api::Protos::Services::ListOfAnEmployeesBillResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace HyperNovaLabs
}  // namespace Api
}  // namespace Protos
}  // namespace Services

