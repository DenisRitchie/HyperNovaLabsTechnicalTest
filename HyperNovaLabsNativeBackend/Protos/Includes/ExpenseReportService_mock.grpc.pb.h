// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ExpenseReportService.proto

#include "ExpenseReportService.pb.h"
#include "ExpenseReportService.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace HyperNovaLabs {
namespace Api {
namespace Protos {
namespace Services {

class MockExpenseReportServiceStub : public ExpenseReportService::StubInterface {
 public:
  MOCK_METHOD3(ListBill, ::grpc::Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::HyperNovaLabs::Api::Protos::Services::ListBillResponse* response));
  MOCK_METHOD3(AsyncListBillRaw, ::grpc::ClientAsyncResponseReaderInterface< ::HyperNovaLabs::Api::Protos::Services::ListBillResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncListBillRaw, ::grpc::ClientAsyncResponseReaderInterface< ::HyperNovaLabs::Api::Protos::Services::ListBillResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(GetBill, ::grpc::Status(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetBillRequest& request, ::HyperNovaLabs::Api::Protos::Models::Bill* response));
  MOCK_METHOD3(AsyncGetBillRaw, ::grpc::ClientAsyncResponseReaderInterface< ::HyperNovaLabs::Api::Protos::Models::Bill>*(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetBillRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncGetBillRaw, ::grpc::ClientAsyncResponseReaderInterface< ::HyperNovaLabs::Api::Protos::Models::Bill>*(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::GetBillRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(CreateBill, ::grpc::Status(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateBillResquest& request, ::HyperNovaLabs::Api::Protos::Services::CreateBillResponse* response));
  MOCK_METHOD3(AsyncCreateBillRaw, ::grpc::ClientAsyncResponseReaderInterface< ::HyperNovaLabs::Api::Protos::Services::CreateBillResponse>*(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateBillResquest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateBillRaw, ::grpc::ClientAsyncResponseReaderInterface< ::HyperNovaLabs::Api::Protos::Services::CreateBillResponse>*(::grpc::ClientContext* context, const ::HyperNovaLabs::Api::Protos::Services::CreateBillResquest& request, ::grpc::CompletionQueue* cq));
};

} // namespace HyperNovaLabs
} // namespace Api
} // namespace Protos
} // namespace Services

